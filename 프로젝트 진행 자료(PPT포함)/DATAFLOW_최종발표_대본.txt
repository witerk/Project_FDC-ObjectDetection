목소리 잘 들리나요? > 체크

발표를 시작하겠습니다.

안녕하세요 데이터 플로우팀입니다.
저는 발표자인 최정인이고 저희 팀은,
김나영, 김예슬, 손아, 한나영으로 총 5명으로 구성되어있습니다.

저희 팀의 발표 주제는 객체탐지를 활용한 반도체 불량 자동 분류 모델 구현입니다.

------------------------------------------------------------------------
분석 환경 및 활용 라이브러리 먼저 소개드리겠습니다.
파이썬을 분석언어로 사용하여 주피터, 아나콘다, 코랩, 비쥬얼 스튜디오 코드, 깃허브, 노션에서 개발하였습니다. 
라이브러리 및 프레임 워크는 opencv, roboflow, 욜로, pytorch 등을 활용하였습니다.

------------------------------------------------------------------------
다음은 목차입니다. 개요부터, 프로젝트 팀 구성 및 역할과 수행 절차 및 방법, 그리고 결과, 마지막으로 자체 평가 의견을 순서로 발표하겠습니다.

------------------------------------------------------------------------
먼저 개요입니다.
객체 탐지를 활용하여 반도체 결함의 정보, 개수 및 수율을 실시간으로 감지하고 시각적으로 보여주는 웹을 구현하는 것이 목적으로 
반도체 제조 공정에서 품질 검수를 통한 수율을 증가시키고 EDS 과정에서의 인건비 절약과 같은 기대 효과가 있습니다.
결론적으로, 반도체 제조 과정의 효율성과 생산성을 향상시키고자 객체 탐지를 수행하였습니다.

------------------------------------------------------------------------
프로젝트 수행 역할은 다음과 같이 진행되었습니다.

------------------------------------------------------------------------
앞서 프로젝트 수행 절차 전 반도체 제조 핵심 과정의 반도체 8대 공정을 소개하겠습니다.
화면에 보이는 순서대로 반도체 제조는 웨이퍼 제조부터 하여 패키징 공정까지 여덟단계를 거칩니다.
저희는 이 중 불량 검출 단계인 EDS 공정 단계에서 객체 탐지 솔루션을 통해 수율을 보여주는 웹 구현을 수행할 예정입니다.

여기까지 프로젝트 배경을 소개드렸습니다.
다음은 프로젝트의 데이터를 소개드리겠습니다.

------------------------------------------------------------------------
저희의 데이터는 반도체 웨이퍼 칩 이미지이며,
아래 그림과 같이 패턴은 총 2가지로 총 337장의 데이터로 프로젝트를 시작하게 되었습니다.
이 데이터를 분석하는 단계에서, 337장의 이미지를 모두 확인한 후,

------------------------------------------------------------------------
결함 유형을 정의하였는데요.
결함 유형을 크게 이물 결함과 회로 결함으로 나누었습니다.
세세하게는 이물 결함으로 닷, 롱으로 정의하였으며, 회로 결함으로는 8가지로 결함 특징을 공통화하여 결함 유형을 정의하였습니다.
이렇게 총 10가지 결함으로 유형 정의를 마친뒤

------------------------------------------------------------------------
로보플로우라는 이미지 전처리 플랫폼을 이용하여 바운딩 박스를 적용하였습니다.

왼쪽은 원본 이미지이고 오른쪽은 로보플로우에서 바운딩 박스를 적용한 이미지입니다.
이렇게 로보플로우에서 박스를 적용하며 데이터 레이블링을 해주었습니다.

로보플로우에서 데이터 증강 옵션과 바운딩 박스 좌표 파일, 트레인/밸리데이션/테스트를 나누어준 데이터셋을 제공받아 활용하였습니다.

------------------------------------------------------------------------
로보플로우에서 제공받은 데이터셋을 적용한 객체 탐지 모델에 대해 소개드리겠습니다.
객체 탐지 모델에는 다단계 탐지, 단일 단계 탐지 두 범주로 나뉩니다.
다단계 탐지는 화면을 보시다시피 1단계, 2단계로 탐지가 이루어져 일반적으로 탐지시간이 소요되는 반면, 정확성이 높습니다.
단일 단계탐지는 한 단계로 한 번에 탐지하여 일반적으로 탐지시간이 빠른 반면, 정확성이 낮습니다.
이를 배경으로, 탐지시간이 빠른 단일 단계 탐지 모델로 1차 선정을 한 후, 정확성을 높이는 목표로 프로젝트를 진행하였습니다.
또한 단일 단계 탐지 모델 중에서도 실시간 객체 탐지 모델로서 성능이 뛰어난 YOLO로 최종 모델 선정을 하였습니다.

------------------------------------------------------------------------
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



YOLO모델을 선정 후 비교를 위해 디텍트론2 모델까지 수행한 객체탐지 모델의 성능변화입니다.
이미지에 대한 별도의 처리 없이 라벨링 작업만을 수행한 초기 모델의 경우, 약 0.35정도의 mAP수치를 보입니다.
이후 데이터 증강 및 라벨링 조정 작업을 통해 mAP수치를 0.7~(에서)8까지 끌어올렸고,
최종적으로 YOLO계열의 모델들을 사용해 초기 목표 수치였던 mAP 0.9를 달성했습니다.

이때 성능적인 측면에서는 디텍트론이 뛰어난 수치를 보였으나, 학습에 걸리는 시간이 너무 길다는 점, 모델이 요구하는 gpu성능을 충족하기 어렵다는 점 등을 고려해 yolo모델을 선정, 
그 중에서 다시 한 번 모델의 객체탐지 능력과 속도, 일반화 수준 등을 고려해 최종적으로 yolov8모델을 선정하였습니다.
 
---------------------------------------------------

욜로 시리즈의 모델을 사용하기로 한 뒤, 작업에서 주목했던 것은 mAP수치의 향상이었습니다.
당시 욜로 모델의 mAP수치가 0.7대에서 정체되어 좀처럼 오르지 않던 시기였고, 그에 대한 방법으로 데이터 증식을 시도하고 있었습니다.
그러나 이때 모델의 객체 탐지 성능뿐 아니라, 탐지된 객체들의 클래스 분류에 문제가 있다는 것을 알고 객체들의 유형을 재정의하게 되었습니다.
기존에 지나치게 세부적으로 나뉘어 있던 클래스들을 유사한 유형끼리 통합하고, 결함의 형태가 아닌 결함의 원인들을 중심으로 일부 객체들의 클래스를 이동하였습니다.
그 결과 mAP수치가 소폭 상승하였고, 의도대로 객체 클래스가 명확히 분류되는 것을 확인할 수 있었습니다.

---------------------------------------------------

이후 재조정된 데이터셋으로 데이터 증강을 시도했는데요,
먼저 타일링 작업입니다.
원래는 해당 작업을 통해 산발적으로 퍼진 크고 작은 객체들을 모델이 좀 더 정확하게 잡아내는 것을 기대했었습니다. 
그러나 실제 실행 결과, 이미지 크롭 과정에서 다수의 객체들이 잘려 형태가 변화했고, 그로인해 모델이 해당 결함을 인식하지 못하는 문제가 발생했습니다.

객체의 형태에 맞게 크롭화를 하면 하나의 test 이미지 내에서 겹치는 부분이 발생해 중복 검증의 위험이 있었고, 
학습셋과 검증셋을 모두 타일화하기엔 앞선 사례와 같이 특정 객체들의 형태가 바뀌어 구분하기 어려워지는 문제가 있었습니다.
그렇기 때문에 최종적으로 타일링을 통한 데이터 증강 방법은 사용이 어렵다는 판단을 내렸습니다.

---------------------------------------------------

다음으로 시도한 것은 이미지 합성과 색 변환을 통한 데이터 증강입니다.
사실 이는 전에도 이미 활용해 보았던 방법이나, 새롭게 시도하며 좀 더 효율적인 방향으로 증식을 시도했습니다.

먼저 모델의 탐색 능력이 떨어지는 일부 클래스를 확인해 해당 객체들을 위주로 합성을 진행하였으며, 여러 객체들을 조합해 완전히 다른 형태의 객체를 만들어내기도 했습니다.
특히 크기와 위치가 일정한 회로 결함들의 경우, 해당 결함이 다른 위치에 있어도 객체를 탐지할 수 있도록, 위치에 다양성을 주었습니다.

이러한 증식을 통해 모델 전체 mAP수치가 상승한 것을 볼 수 있었는데,
그 중에서도 특히나 처음 목적했던 일부 클래스들의 탐지 정도가 대폭 상승해 성공적인 데이터 증강의 사례로 볼 수 있었습니다.

block, circle, round와 같은 회로 결함 클래스들의 탐지 수준이 개선되며 모든 회로 결함들의 mAP 수치가 0.9 중후반대로 들어섰고, 
long 클래스와 같은 이물 결함 경우 AP수치가 0.6이나 상승하며 거의 모든 결함을 빠짐없이 잡아내게 되었습니다.

---------------------------------------------------

앞에서 시도한 증식으로, 거의 대부분의 클래스별 AP수치들이 0.9대로 들어섰는데,
그 중 dot과 long과 같은 이물 결함 클래스만이 그에 미치지 못했습니다.
이를 해결하고자 먼저 객체 탐지 결과를 확인했으나, 예상과 달리 long클래스의 객체들이 모두 정상적으로 잘 탐지된 것을 볼 수 있었습니다.
탐지 작업은 무사히 이루어졌으나 클래스 AP수치는 개선되지 않는 상황에, 이에 대한 원인을 찾고자 했습니다.

이때 눈에 들어왔던 것은 바로 객체탐지 결과를 시각화 한 그림이었습니다.
객체의 테두리를 따라가는 형태의 어노테이션 정보와는 달리, 모델이 예측한 탐지 결과는 모두 박스의 형태로 이루어져 있었습니다.
여기서 '실제 영역은 테두리로 되어있는데 예측된 영역이 박스의 형태이니, 당연히 iou수치가 낮아져 AP수치도 낮아지게 된 것 아닌가'라는 추측이 들었고, 
바운딩박스의 형태를 수정해보니 곧바로 클래스 AP수치가 0.959까지 오르는 것을 확인했습니다.

이후 이와 관련된 정보를 찾아보니 모델에 따라 예측의 형태는 다양하며, yolo모델의 경우 일반적으로 사각 형태로만 예측을 수행하기 때문에 다각형 박스는 예측결과와의 차이를 불러올 수 있다는 것을 알았습니다.

---------------------------------------------------

다음 중 해결했던 또 하나의 문제로, dot클래스의 거대한 박스가 있었습니다.
dot클래스는 미세 이물질에 대한 결함으로 모든 객체들이 작은 크기를 가지고 있으나, 객체 탐지 시 랜덤하게 커다란 박스가 예측되는 문제를 발견했습니다.
이때 모델 하이퍼파라미터 중 weight_decay를 감소시키는 것으로 해당 문제를 해결했습니다.

---------------------------------------------------

마지막으로 증식 종류에 따른 모델 일반화 능력 향상에 대해 설명드리겠습니다.
기존 학습시켰던 모델은, 증식 방법으로 색변환과 합성을 활용해, 1차 검증 mAP 0.942, 2차 검증 mAP 0.961의 성능을 보였습니다.
그러나 증식 방법을 탐색하던 중, 색변환과 노이즈를 통한 증식에서 과적합이 쉽게 발생한다는 것을 발견하고, 모델의 일반화 정도를 재고해보게 되었습니다.
따라서 기존의 모델에, 과적합을 완화할 수 있는 회전과 뒤집기 옵션을 추가하여 재학습하였고,
그 결과 1차 검증 mAP 0.956, 2차 검증 mAP 0.948로 두 검증 간의 차이를 좁힐 수 있었습니다.

---------------------------------------------------

이와 같은 과정을 바탕으로 최종적으로 모델을 선정했습니다.
디텍트론2, 그리고 욜로5,7,8의 n~x 모델들. 
이들 중 모델을 선정하는 데 고려한 것은 모델의 객체 탐지 성능과 그에 걸리는 시간, 일반화 능력이었습니다.

먼저 디텍트론2의 경우, 욜로 모델과 비교해 학습에 10배 이상의 시간이 소요되었습니다.
소요 시간에 대한 해결책으로 모델에서 요구되는 고사양의 gpu를 갖추는 방법이 있었으나, 곧바로 충족하기는 어려운 조건이라 제하게 되었습니다.

욜로는 모델의 크기와 복잡도에 따라 나노, 스몰, 미디엄, 라지, 엑스트라라지로 나뉘는데, 
현재 가진 데이터셋에는 미디엄 이상의 큰 모델들이 더 적합했습니다.

이때 미디엄, 라지, 엑스트라라지 모델 간의 성능 차이가 크지 않아, 시간이 가장 적게 걸리는 미디엄, m모델을 선정했습니다.

마지막으로 5, 7, 8 버전 중 욜로8을 선정하게 된 이유입니다.
셋 중 모델 성능이 가장 좋은 것은 욜로7이었으나, 욜로5와 8 버전 중 학습에 가장 긴 시간이 필요했습니다. 
다른 버전에서 20분 내로 끝났던 학습이 7버전에선 50분 이상 필요했고, 
이후 데이터셋이 훨씬 커질 경우 학습에 걸리는 시간이 극적으로 늘어날 것을 고려해 해당 모델을 제외하였습니다.
욜로5의 경우 학습에 걸리는 시간과 성능이 욜로8과 비슷했으나, 
욜로8버전이 조금 더 빠르고, 조금 더 정확하다는 점을 들어 최종적으로 모델을 선정하게 되었습니다.

------------------------------------------------------------------------
다음은 웹 시현 영상 전, 데이터 증강 모델로 피드백 받았던 GAN 모델을 시도했던 부분입니다.
왼쪽에 배치된 다섯 장의 이미지는 GAN 모델로 에폭값에 따라 각각 다르게 생성된 노이즈 이미지입니다.
이미지 생성에 시초인 모델 GAN으로는 저희가 원하는 새로운 이미지 생성이 어렵다고 판단되었고,
또다른 문제로는 기존 데이터량 결핍 문제로 활용해보려 했던 GAN 모델도 많은 데이터가 요구되었습니다.

하여 추후 알게된 GAN 계열의 모델들 중, 소량의 데이터로 학습이 가능하고, 고해상도 이미지가 생성되는
모델인. StyleGAN으로 파악되었습니다. 현재 프로젝트에 활용하지 못했지만 향후 GAN 모델들을 학습하여
적용해볼 계획에 있습니다.

------------------------------------------------------------------------
여기까지 프로젝트 진행 과정이었으며 이것을 토대로 구현한 웹을
시현해본 동영상을 보여드리겠습니다.

해당 화면은 사이트 첫 화면이고,

(꼭재생버튼 ^^)
왼쪽 위 detect 버튼을 눌러 이동한 후,
중앙의 파일 선택을 눌러 약 7장의 이미지를 선택하고 검사하기 버튼을 누릅니다.
그럼 사이트에서 결함 탐지를 몇 초간 수행한 뒤에 테스트 결과를 보여줍니다.
아래에 다음 버튼을 눌러 각각의 이미지들을 눈으로 직접 확인할 수 있으며
오른쪽 아래에 수율 버튼을 눌러 마지막으로 수율까지 확인을 할 수 있는 웹을 구현하였습니다.

웹 구현을 통해, 수행 목표로 삼았던 객체 탐지 솔루션을 활용한 수율 시각화를 성공적으로 실현하였습니다.

------------------------------------------------------------------------
지금까지 데이터플로우 팀의 발표자 최정인이었습니다.
들어주셔서 감사합니다.
큐앤에이 시간을 갖도록 하겠습니다.









------------------------------------------------------------------------
죄송합니다 질문을 이해하지 못했는데 다시 말씀 부탁드립니다 ㅠ
------------------------------------------------------------------------
그 부분은 해당 작업을 수행한 팀원이 답변드리겠습니다.




------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<주경팀>
다양한 전처리와 모델, 성능비교 구욷~
논문 기반 방향잡기 구욷~
ai를 사용하지 않는 반도체 탐지 문헌들이 있다면, 같이 비교해보기
실제 회사들 정확도랑 비교해보기. 얼마나 차이가 있는지, 그 차이의 원인이 뭔지

<우리팀>
학습 시간보단 성능에 집중하자
바운딩박스 재조정에 관한 부분이 흥미로웠다 (여러 실험하고 그런)
과정 상세 설명 좋았음
모델, 데이터, 하이퍼파라미터 3가지가 모두 교류하며 조정되어야 함
문헌 조사 부분 스토리텔링이 부족 (회사 어필 좋음)
디텍트론에서 욜로로 변경하면서 넘어가는 부분이 조금 간단했다 (여러 시도를 했을텐데 그것도 자세히 설명하자)
말로 설명한 부분들이 많았는데 실제 표나 사진으로 들어갔으면(디텍트론 욜로 넘어가는 부분)
증강을 한 다음에? 박스가 들어가는 것?
수율 = 100개를 넣었을 때 양품의 비율

<동완팀>
AI허브에 가면 표준어뿐 아니라 지역 방언 데이터도 많음
비지니스 모델 기반 접근이 아주 좋음
이전 발표들은 기술 기반의 모델&데이터 였는데, 이 조는 사업 기반인 점이 좋음
고객이 얻을 가치에 대해 좀 더 설명해줬으면 좋겠고
수익 모델이 뭔지 간단히 설명 들어갔으면 좋겠음

좀 더 포트폴리오에 정리하기
비전 쪽은 기술적으로 잘 하는 것도 중요한데, 회사가 얼마 없음
언어쪽은 취업이 좀 더 잘 되는편

<남디팀>
분석 방법도 같이 설명해줬으면 좋겠다 (모델은 분석 방법을 다 설명해줬는데, 통계 분석은 얘기를 안해줘서)
현업과 이번 데이터가 어느정도 유사도가 있냐
실제로 회사에 어느 정도의 기여를 할 수 있는가
